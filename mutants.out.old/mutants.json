[
  {
    "file": "src/lib.rs",
    "line": 52,
    "function": "<??>::new",
    "return_type": "-> Result < Self , Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 82,
    "function": "<??>::into_program_mode",
    "return_type": "-> Ebyte < S , Aux , M0 , M1 , D , Program >",
    "replacement": "Default::default()"
  },
  {
    "file": "src/lib.rs",
    "line": 95,
    "function": "<??>::write_buffer",
    "return_type": "-> Result < () , crate :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 103,
    "function": "<??>::read_buffer",
    "return_type": "-> Result < () , Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 110,
    "function": "<??>::release",
    "return_type": "-> (S , Aux , M0 , M1 , D)",
    "replacement": "Default::default()"
  },
  {
    "file": "src/lib.rs",
    "line": 125,
    "function": "<??>::read",
    "return_type": "-> nb :: Result < u8 , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 142,
    "function": "<??>::write",
    "return_type": "-> nb :: Result < () , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 146,
    "function": "<??>::flush",
    "return_type": "-> nb :: Result < () , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 162,
    "function": "<??>::read_model_data",
    "return_type": "-> Result < ModelData , Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 183,
    "function": "<??>::read_parameters",
    "return_type": "-> Result < Parameters , Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 204,
    "function": "<??>::set_parameters",
    "return_type": "-> Result < () , Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/lib.rs",
    "line": 235,
    "function": "<??>::reset",
    "return_type": "",
    "replacement": "()"
  },
  {
    "file": "src/lib.rs",
    "line": 243,
    "function": "<??>::until_aux",
    "return_type": "",
    "replacement": "()"
  },
  {
    "file": "src/lib.rs",
    "line": 255,
    "function": "<??>::into_normal_mode",
    "return_type": "-> Ebyte < S , Aux , M0 , M1 , D , Normal >",
    "replacement": "Default::default()"
  },
  {
    "file": "src/model_data.rs",
    "line": 12,
    "function": "ModelData::to_bytes",
    "return_type": "-> [u8 ; 3]",
    "replacement": "Default::default()"
  },
  {
    "file": "src/model_data.rs",
    "line": 16,
    "function": "ModelData::from_bytes",
    "return_type": "-> Result < Self , Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/air_baudrate.rs",
    "line": 19,
    "function": "AirBaudRate::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/air_baudrate.rs",
    "line": 33,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/baudrate.rs",
    "line": 21,
    "function": "BaudRate::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/baudrate.rs",
    "line": 37,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/mod.rs",
    "line": 28,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/mod.rs",
    "line": 60,
    "function": "Parameters::to_bytes",
    "return_type": "-> [u8 ; 5]",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/mod.rs",
    "line": 88,
    "function": "Parameters::from_bytes",
    "return_type": "-> Result < Self , Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/option/fec_mode.rs",
    "line": 15,
    "function": "ForwardErrorCorrectionMode::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/option/fec_mode.rs",
    "line": 25,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/option/io_drive_mode.rs",
    "line": 15,
    "function": "IoDriveMode::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/option/io_drive_mode.rs",
    "line": 25,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/option/transmission_mode.rs",
    "line": 15,
    "function": "TransmissionMode::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/option/transmission_mode.rs",
    "line": 25,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/option/transmission_power.rs",
    "line": 17,
    "function": "TransmissionPower::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/option/transmission_power.rs",
    "line": 29,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/option/wakeup_time.rs",
    "line": 21,
    "function": "WakeupTime::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/option/wakeup_time.rs",
    "line": 37,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/parameters/uart_parity.rs",
    "line": 16,
    "function": "Parity::try_from",
    "return_type": "-> Result < Self , Self :: Error >",
    "replacement": "Ok(Default::default())"
  },
  {
    "file": "src/parameters/uart_parity.rs",
    "line": 27,
    "function": "u8::from",
    "return_type": "-> Self",
    "replacement": "Default::default()"
  },
  {
    "file": "src/test/parameters/read_params.rs",
    "line": 21,
    "function": "read_parameters_expectations",
    "return_type": "-> ReadParameterExpectations",
    "replacement": "Default::default()"
  },
  {
    "file": "src/test/parameters/set_params.rs",
    "line": 28,
    "function": "set_parameters_expectations",
    "return_type": "-> SetParameterExpectations",
    "replacement": "Default::default()"
  },
  {
    "file": "src/test/read_model.rs",
    "line": 21,
    "function": "read_model_data_expectations",
    "return_type": "-> ReadModelDataExpectations",
    "replacement": "Default::default()"
  }
]