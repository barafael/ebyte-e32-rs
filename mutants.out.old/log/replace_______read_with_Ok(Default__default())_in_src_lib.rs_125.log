
*** replace <??>::read with Ok(Default::default()) in src/lib.rs:125
*** --- src/lib.rs
+++ replace <??>::read with Ok(Default::default())
@@ -118,18 +118,18 @@
     Aux: InputPin,
     M0: OutputPin,
     M1: OutputPin,
     D: DelayMs<u32>,
 {
     type Error = <S as Read<u8>>::Error;
 
     fn read(&mut self) -> nb::Result<u8, Self::Error> {
-        self.serial.read()
-    }
+Ok(Default::default()) /* ~ changed by cargo-mutants ~ */
+}
 }
 
 /// Implement Write for Hc12 in normal mode.
 /// This just defers to the underlying serial implementation.
 impl<S, Aux, M0, M1, D> Write<u8> for Ebyte<S, Aux, M0, M1, D, Normal>
 where
     S: Read<u8> + Write<u8>,
     Aux: InputPin,

*** run /home/rafaelbachmann/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo check --tests
*** cargo result: Exited(0) in 0.267s
*** run /home/rafaelbachmann/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo build --tests
*** cargo result: Exited(0) in 1.003s
*** run /home/rafaelbachmann/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo test
*** cargo result: Exited(101) in 2.937s2qSz5l)
    Finished test [unoptimized + debuginfo] target(s) in 0.19s
     Running unittests (target/debug/deps/ebyte_e32-d32ca24a8eb391c6)

running 18 tests
test mode::test::id ... ok
test mode::test::pins_normal ... ok
test mode::test::pins_program ... ok
test mode::test::pins_powerdown ... ok
test test::acquire_release ... ok
test test::flushes ... ok
test mode::test::pins_wakeup ... ok
test test::resets ... ok
test test::reads_byte ... FAILED
test test::writes_byte ... ok
test model_data::test::model_data_from_to_bytes_roundtrip ... ok
test test::writes_buffer ... ok
test test::reads_buffer ... ok
test test::read_model::reads_model_data ... ok
test parameters::test::from_to_bytes_roundtrip ... ok
test test::parameters::read_params::reads_parameters ... ok
test test::parameters::read_params::sets_parameters ... ok
test test::parameters::set_params::sets_parameters ... ok

failures:

---- test::reads_byte stdout ----
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `189`', src/test/mod.rs:125:9
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `94`', src/test/mod.rs:125:9
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `47`', src/test/mod.rs:125:9
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `23`', src/test/mod.rs:125:9
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `11`', src/test/mod.rs:125:9
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `5`', src/test/mod.rs:125:9
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `2`', src/test/mod.rs:125:9
thread 'test::reads_byte' panicked at 'assertion failed: `(left == right)`
  left: `0`,
 right: `1`', src/test/mod.rs:125:9
thread 'test::reads_byte' panicked at 'serial mock has unsatisfied expectations after call to done', /home/rafaelbachmann/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-hal-mock-0.8.0/src/serial.rs:340:9
thread 'test::reads_byte' panicked at 'Test failed: serial mock has unsatisfied expectations after call to done; minimal failing input: byte = 0
	successes: 0
	local rejects: 0
	global rejects: 0
', src/test/mod.rs:104:1


failures:
    test::reads_byte

test result: FAILED. 17 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.73s

error: test failed, to rerun pass '--lib'
